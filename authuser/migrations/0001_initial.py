# Generated by Django 4.2.2 on 2023-07-24 13:39

import authuser.models.student
import authuser.models.user_model
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('email', models.EmailField(error_messages='Email Already Taken', max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=300, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('bio_capture', models.CharField(blank=True, max_length=500, null=True)),
                ('bio_capture2', models.CharField(blank=True, max_length=500, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('roles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles_rel_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', authuser.models.user_model.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LecturerModel',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('salutation', models.CharField(choices=[('---', 'Choose'), ('mr', 'Mr'), ('Mrs', 'Mrs'), ('miss', 'Miss'), ('dr', 'Dr'), ('sir', 'Sir'), ('madam', 'Madam')], default='---', max_length=300)),
                ('first_name', models.CharField(blank=True, max_length=300, null=True)),
                ('last_name', models.CharField(blank=True, max_length=300, null=True)),
                ('surname', models.CharField(blank=True, max_length=300, null=True)),
                ('picture_url', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'Lecturer',
                'verbose_name_plural': 'Lecturers',
            },
            bases=('authuser.user',),
            managers=[
                ('objects', authuser.models.user_model.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StudentModel',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=350, null=True)),
                ('last_name', models.CharField(max_length=350, null=True)),
                ('reg_no', models.CharField(blank=True, max_length=300, null=True)),
                ('picture_url', models.ImageField(blank=True, null=True, upload_to=authuser.models.student.generate_filename)),
                ('picture_name', models.CharField(blank=True, editable=False, max_length=550, null=True)),
            ],
            options={
                'verbose_name': 'Students',
                'verbose_name_plural': 'Students',
            },
            bases=('authuser.user',),
            managers=[
                ('objects', authuser.models.user_model.CustomUserManager()),
            ],
        ),
    ]
